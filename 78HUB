-- 获取必要服务
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

-- 获取本地玩家和PlayerGui
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- 创建主ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "HubUIGui"
screenGui.Parent = playerGui

-- 1. 欢迎文字
local welcomeText = Instance.new("TextLabel")
welcomeText.Name = "WelcomeText"
welcomeText.Text = "欢迎使用78HUB"
welcomeText.TextSize = 28
welcomeText.TextColor3 = Color3.new(1, 1, 1)
welcomeText.Font = Enum.Font.SourceSansBold
welcomeText.BackgroundTransparency = 1
welcomeText.Size = UDim2.new(0, 300, 0, 50)
welcomeText.Position = UDim2.new(0.5, -150, 0.5, -25)
welcomeText.Parent = screenGui

-- 2秒后淡出欢迎文字并显示菜单
task.delay(2, function()
    local tween = TweenService:Create(
        welcomeText,
        TweenInfo.new(0.5),
        {TextTransparency = 1}
    )
    tween:Play()
    tween.Completed:Connect(function()
        welcomeText:Destroy()
        createMainMenu() -- 创建主菜单
    end)
end)

-- 主菜单变量
local mainFrame, border, minimizeButton, menuButton
local isMinimized = false
local isDragging = false
local dragStart, startPos

-- 创建主菜单函数
function createMainMenu()
    -- 主容器
    mainFrame = Instance.new("Frame")
    mainFrame.Name = "MainFrame"
    mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
    mainFrame.Size = UDim2.new(0, 0, 0, 0) -- 初始大小
    mainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
    mainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
    mainFrame.ClipsDescendants = true
    mainFrame.Parent = screenGui
    
    -- 圆角
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 12)
    corner.Parent = mainFrame
    
    -- 彩色边框
    border = Instance.new("Frame")
    border.Name = "Border"
    border.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    border.Size = UDim2.new(1, 4, 1, 4) -- 比主框大4像素
    border.Position = UDim2.new(0, -2, 0, -2) -- 居中偏移
    border.ZIndex = -1
    border.Parent = mainFrame
    
    local borderCorner = Instance.new("UICorner")
    borderCorner.CornerRadius = UDim.new(0, 14) -- 比主框稍大
    borderCorner.Parent = border
    
    -- 边框颜色动画
    local function animateBorder()
        local targetColor = Color3.fromRGB(
            math.random(50, 255),
            math.random(50, 255),
            math.random(50, 255)
        )
        
        local tween = TweenService:Create(
            border,
            TweenInfo.new(1.5, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut),
            {BackgroundColor3 = targetColor}
        )
        tween:Play()
        tween.Completed:Connect(function()
            task.wait(1)
            animateBorder()
        end)
    end
    animateBorder()
    
    -- 左上角标题
    local title = Instance.new("TextLabel")
    title.Name = "Title"
    title.Text = "78HUB"
    title.TextSize = 20
    title.TextColor3 = Color3.new(1, 1, 1)
    title.Font = Enum.Font.SourceSansBold
    title.BackgroundTransparency = 1
    title.Size = UDim2.new(0, 100, 0, 30)
    title.Position = UDim2.new(0, 15, 0, 10)
    title.TextXAlignment = Enum.TextXAlignment.Left
    title.Parent = mainFrame
    
    -- 右上角最小化按钮
    minimizeButton = Instance.new("TextButton")
    minimizeButton.Name = "MinimizeButton"
    minimizeButton.Text = "_"
    minimizeButton.TextSize = 24
    minimizeButton.TextColor3 = Color3.new(1, 1, 1)
    minimizeButton.Font = Enum.Font.SourceSansBold
    minimizeButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
    minimizeButton.AutoButtonColor = false
    minimizeButton.Size = UDim2.new(0, 30, 0, 30)
    minimizeButton.Position = UDim2.new(1, -40, 0, 10)
    minimizeButton.AnchorPoint = Vector2.new(1, 0)
    minimizeButton.Parent = mainFrame
    
    local minButtonCorner = Instance.new("UICorner")
    minButtonCorner.CornerRadius = UDim.new(0, 6)
    minButtonCorner.Parent = minimizeButton
    
    -- 最小化按钮悬停效果
    minimizeButton.MouseEnter:Connect(function()
        TweenService:Create(
            minimizeButton,
            TweenInfo.new(0.2),
            {BackgroundTransparency = 0.3}
        ):Play()
    end)
    
    minimizeButton.MouseLeave:Connect(function()
        TweenService:Create(
            minimizeButton,
            TweenInfo.new(0.2),
            {BackgroundTransparency = 0}
        ):Play()
    end)
    
    -- 最小化按钮点击事件
    minimizeButton.MouseButton1Click:Connect(function()
        toggleMinimize()
    end)
    
    -- 创建菜单内容区域
    createMenuContent()
    
    -- 菜单拖动功能
    setupDrag()
    
    -- 初始动画：从中心放大
    local openTween = TweenService:Create(
        mainFrame,
        TweenInfo.new(0.8, Enum.EasingStyle.Back, Enum.EasingDirection.Out),
        {Size = UDim2.new(0, 600, 0, 400)}
    )
    openTween:Play()
end

-- 创建菜单内容
function createMenuContent()
    -- 水平布局
    local layout = Instance.new("UIListLayout")
    layout.FillDirection = Enum.FillDirection.Horizontal
    layout.Padding = UDim.new(0, 5)
    layout.Parent = mainFrame
    
    -- 左侧选项栏 (200px)
    local optionsFrame = Instance.new("Frame")
    optionsFrame.Name = "OptionsFrame"
    optionsFrame.BackgroundTransparency = 1
    optionsFrame.Size = UDim2.new(0, 200, 1, -50) -- 高度减去标题栏
    optionsFrame.Position = UDim2.new(0, 0, 0, 50)
    optionsFrame.Parent = mainFrame
    
    -- 选项滚动区域
    local optionsScroller = Instance.new("ScrollingFrame")
    optionsScroller.Name = "OptionsScroller"
    optionsScroller.BackgroundTransparency = 1
    optionsScroller.Size = UDim2.new(1, 0, 1, 0)
    optionsScroller.CanvasSize = UDim2.new(0, 0, 0, 600) -- 可滚动高度
    optionsScroller.ScrollBarThickness = 5
    optionsScroller.Parent = optionsFrame
    
    local optionsLayout = Instance.new("UIListLayout")
    optionsLayout.Padding = UDim.new(0, 10)
    optionsLayout.Parent = optionsScroller
    
    -- 右侧内容区 (380px)
    local contentFrame = Instance.new("Frame")
    contentFrame.Name = "ContentFrame"
    contentFrame.BackgroundTransparency = 1
    contentFrame.Size = UDim2.new(0, 380, 1, -50) -- 高度减去标题栏
    contentFrame.Position = UDim2.new(0, 210, 0, 50)
    contentFrame.Parent = mainFrame
    
    -- 内容滚动区域
    local contentScroller = Instance.new("ScrollingFrame")
    contentScroller.Name = "ContentScroller"
    contentScroller.BackgroundTransparency = 1
    contentScroller.Size = UDim2.new(1, 0, 1, 0)
    contentScroller.CanvasSize = UDim2.new(0, 0, 2, 0) -- 可滚动区域
    contentScroller.ScrollBarThickness = 5
    contentScroller.Parent = contentFrame
    
    local contentLayout = Instance.new("UIListLayout")
    contentLayout.Padding = UDim.new(0, 15)
    contentLayout.Parent = contentScroller
    
    -- 添加6个选项
    local options = {
        {name = "功能1", color = Color3.fromRGB(70, 130, 180)},
        {name = "功能2", color = Color3.fromRGB(50, 160, 80)},
        {name = "功能3", color = Color3.fromRGB(200, 100, 50)},
        {name = "功能4", color = Color3.fromRGB(150, 70, 200)},
        {name = "功能5", color = Color3.fromRGB(220, 180, 40)},
        {name = "功能6", color = Color3.fromRGB(80, 180, 180)}
    }
    
    local currentPage = nil
    
    for i, option in ipairs(options) do
        local optionButton = Instance.new("TextButton")
        optionButton.Name = option.name
        optionButton.Text = option.name
        optionButton.TextColor3 = Color3.new(1, 1, 1)
        optionButton.TextSize = 16
        optionButton.Font = Enum.Font.SourceSansBold
        optionButton.BackgroundColor3 = option.color
        optionButton.AutoButtonColor = false
        optionButton.Size = UDim2.new(1, -20, 0, 50) -- 宽度减20px留边距
        optionButton.Position = UDim2.new(0, 10, 0, (i-1)*60) -- 每个选项间隔60px
        optionButton.Parent = optionsScroller
        
        local buttonCorner = Instance.new("UICorner")
        buttonCorner.CornerRadius = UDim.new(0, 8)
        buttonCorner.Parent = optionButton
        
        -- 按钮悬停效果
        optionButton.MouseEnter:Connect(function()
            TweenService:Create(
                optionButton,
                TweenInfo.new(0.2),
                {BackgroundTransparency = 0.2}
            ):Play()
        end)
        
        optionButton.MouseLeave:Connect(function()
            TweenService:Create(
                optionButton,
                TweenInfo.new(0.2),
                {BackgroundTransparency = 0}
            ):Play()
        end)
        
        -- 按钮点击事件
        optionButton.MouseButton1Click:Connect(function()
            if currentPage then
                currentPage:Destroy()
            end
            
            -- 创建对应内容页面
            local page = Instance.new("Frame")
            page.Name = option.name .. "Page"
            page.BackgroundTransparency = 1
            page.Size = UDim2.new(1, 0, 0, 400) -- 高度足够容纳内容
            page.Parent = contentScroller
            
            local title = Instance.new("TextLabel")
            title.Text = option.name .. " 功能页面"
            title.TextSize = 20
            title.TextColor3 = Color3.new(1, 1, 1)
            title.Font = Enum.Font.SourceSansBold
            title.BackgroundTransparency = 1
            title.Size = UDim2.new(1, 0, 0, 40)
            title.Parent = page
            
            -- 添加一些示例按钮
            for j = 1, 8 do
                local contentButton = Instance.new("TextButton")
                contentButton.Text = option.name .. " 按钮 " .. j
                contentButton.TextColor3 = Color3.new(1, 1, 1)
                contentButton.TextSize = 14
                contentButton.Font = Enum.Font.SourceSans
                contentButton.BackgroundColor3 = option.color
                contentButton.AutoButtonColor = false
                contentButton.Size = UDim2.new(1, -20, 0, 35)
                contentButton.Position = UDim2.new(0, 10, 0, 50 + (j-1)*45)
                contentButton.Parent = page
                
                local btnCorner = Instance.new("UICorner")
                btnCorner.CornerRadius = UDim.new(0, 6)
                btnCorner.Parent = contentButton
                
                -- 按钮动画
                contentButton.MouseEnter:Connect(function()
                    TweenService:Create(
                        contentButton,
                        TweenInfo.new(0.2),
                        {BackgroundTransparency = 0.3}
                    ):Play()
                end)
                
                contentButton.MouseLeave:Connect(function()
                    TweenService:Create(
                        contentButton,
                        TweenInfo.new(0.2),
                        {BackgroundTransparency = 0}
                    ):Play()
                end)
            end
            
            currentPage = page
            contentScroller.CanvasPosition = Vector2.new(0, 0)
        end)
    end
    
    -- 默认选择第一个选项
    optionsScroller:FindFirstChild(options[1].name).MouseButton1Click:Wait()
end

-- 设置菜单拖动功能
function setupDrag()
    local dragInput, dragStart, startPos
    
    mainFrame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            isDragging = true
            dragStart = input.Position
            startPos = mainFrame.Position
        end
    end)
    
    mainFrame.InputChanged:Connect(function(input)
        if isDragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - dragStart
            mainFrame.Position = UDim2.new(
                startPos.X.Scale, startPos.X.Offset + delta.X,
                startPos.Y.Scale, startPos.Y.Offset + delta.Y
            )
        end
    end)
    
    mainFrame.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            isDragging = false
        end
    end)
end

-- 最小化/恢复菜单
function toggleMinimize()
    isMinimized = not isMinimized
    
    if isMinimized then
        -- 缩小为正方形按钮
        local minimizeTween = TweenService:Create(
            mainFrame,
            TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.In),
            {Size = UDim2.new(0, 0, 0, 0)}
        )
        minimizeTween:Play()
        minimizeTween.Completed:Connect(function()
            mainFrame.Visible = false
            
            -- 创建菜单按钮
            menuButton = Instance.new("TextButton")
            menuButton.Name = "MenuButton"
            menuButton.Text = "78"
            menuButton.TextSize = 18
            menuButton.TextColor3 = Color3.new(1, 1, 1)
            menuButton.Font = Enum.Font.SourceSansBold
            menuButton.BackgroundColor3 = Color3.fromRGB(70, 130, 180)
            menuButton.AutoButtonColor = false
            menuButton.Size = UDim2.new(0, 50, 0, 50)
            menuButton.Position = mainFrame.Position
            menuButton.AnchorPoint = Vector2.new(0.5, 0.5)
            menuButton.Parent = screenGui
            
            local buttonCorner = Instance.new("UICorner")
            buttonCorner.CornerRadius = UDim.new(0, 12)
            buttonCorner.Parent = menuButton
            
            -- 按钮悬停效果
            menuButton.MouseEnter:Connect(function()
                TweenService:Create(
                    menuButton,
                    TweenInfo.new(0.2),
                    {BackgroundTransparency = 0.2}
                ):Play()
            end)
            
            menuButton.MouseLeave:Connect(function()
                TweenService:Create(
                    menuButton,
                    TweenInfo.new(0.2),
                    {BackgroundTransparency = 0}
                ):Play()
            end)
            
            -- 按钮点击恢复菜单
            menuButton.MouseButton1Click:Connect(function()
                menuButton:Destroy()
                mainFrame.Visible = true
                local restoreTween = TweenService:Create(
                    mainFrame,
                    TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.Out),
                    {Size = UDim2.new(0, 600, 0, 400)}
                )
                restoreTween:Play()
                isMinimized = false
            end)
        end)
    else
        -- 恢复菜单
        if menuButton then
            menuButton:Destroy()
        end
        mainFrame.Visible = true
        local restoreTween = TweenService:Create(
            mainFrame,
            TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.Out),
            {Size = UDim2.new(0, 600, 0, 400)}
        )
        restoreTween:Play()
    end
end
